plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    jcenter()
}
apply plugin: "io.spring.dependency-management"
dependencies {
    implementation 'org.mapstruct:mapstruct:1.4.1.Final'
    implementation group: 'org.springframework.boot', name: 'spring-boot-actuator', version: '2.4.3'
//    implementation group: 'de.codecentric', name: 'spring-boot-admin-starter-server', version: '2.4.0'
//    implementation group: 'de.codecentric', name: 'spring-boot-admin-starter-client', version: '2.4.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation group: 'com.querydsl', name: 'querydsl-jpa', version: '4.4.0'
    implementation group: 'com.querydsl', name: 'querydsl-core', version: '4.4.0'
    implementation group: 'com.querydsl', name: 'querydsl-apt', version: '4.4.0'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.9'
    implementation group: 'io.swagger.core.v3', name: 'swagger-annotations', version: '2.1.6'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.19'
    implementation 'junit:junit:4.12'
    compile('org.projectlombok:lombok')
    compile("com.querydsl:querydsl-core") // querydsl
    compile("com.querydsl:querydsl-jpa") // querydsl
    annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa") // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.3.6'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    //2차cache
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation group: 'javax.cache', name: 'cache-api', version: '1.1.1'
    implementation group: 'org.hibernate', name: 'hibernate-jcache', version: '5.4.19.Final'
    implementation group: 'org.ehcache', name: 'ehcache', version: '3.8.1'

    //
    // compileOnly 'org.projectlombok:lombok'
    testCompile "org.projectlombok:lombok"
    testAnnotationProcessor('org.projectlombok:lombok')
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.13.1'
    implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
    // https://mvnrepository.com/artifact/commons-io/commons-io
    implementation group: 'commons-io', name: 'commons-io', version: '2.6'

}

def generated='src/main/generated'
sourceSets {
    main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
    file(generated).deleteDir()
}
test {
    useJUnitPlatform()
}
dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:8.1.0"
    }
}
