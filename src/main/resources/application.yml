server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
#spring.boot.admin.client:
#  url: http://localhost:8080
#  instance.service-url: http://localhost:8080
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
  endpoint.shutdown:
    enabled: true
spring:
  boot:
    admin:
      ui:
        brand: <img src="assets/img/icon-spring-boot-admin.svg"><span>Spring Boot Admin</span>
        title: Spring Boot Admin
  data:
    mongodb:
      #      url: mongodb://mongodb2:27017/test
      host: mongodb2
      port: 27017
      database: test
  h2:
    console:
      enabled: true
      path: /h2-console
  datasource:
    url: jdbc:h2:mem:testdb
    platform: h2
    username: sa
    password:
    driverClassName: org.h2.Driver

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
#    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      use-new-id-generator-mappings: true
      ddl-auto: create-drop
    properties:
      hibernate:
        cache:
          use_second_level_cache: true
          use_query_cache: true
        dialect: org.hibernate.dialect.H2Dialect
#        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        show_sql: true
        default_batch_fetch_size: 1000
logging.level: #띄어쓰기 없음
      #  org.hibernate.SQL: debug #띄어쓰기 2칸
  org.hibernate.type.descriptor.sql: trace
  root: info
jwt:
  header: Authorization
  secret: devidea
  token-validity-in-seconds: 86400
sns:
  github:
    url:
    client:
      id: 9bc5902314cd6dbcb181
      secret: 546cd1a7649e1b134d6c8651d486609493984e25
    callback:
      url: http://localhost:8080/login/oauth/github/callback

  google:
    url: https://accounts.google.com/o/oauth2/v2/auth
    client:
      id: 9719839326-fnc7hcgbq8nit8qp6s3ip7vrfn01gche.apps.googleusercontent.com
      secret: k64ajtdh7iPfaEkW_TjbwiGm
    callback:
      url: http://localhost:8080/login/oauth/google/callback
crawling:
  Scheduled: '*/10 * * * * *'

#spring.datasource.driverclassname: com.mysql.cj.jdbc.Driver
#spring.datasource.url: jdbc:mysql://localhost:3306/test?serverTimezone=UTC&characterEncoding=UTF-8
#spring.datasource.username: root
#spring.datasource.password: root

#spring.datasource:
#  driverclassname: org.postgresql.Driver
#  url: jdbc:postgresql://localhost:5432/testdb?serverTimezone=UTC&characterEncoding=UTF-8
#  username: postgres
#  password: